@startuml
'https://plantuml.com/class-diagram



class ReactionInfo {
+ quantityMade
+ reactionInputs
}


interface IReactionInfo {
+{abstract}getReactionForChemical(String chemical) -> Reaction
}

IReactionInfo - Reaction

class Reaction {
+outputChemical
+inputChemicalInfo
+outputChemicalQuantity
}

interface IDay14 {
+{abstract}leastOreRequiredToMakeNFuel(N)
+{abstract}mostFuelForNOre(N)

}

class Day14 {
-IReactionInfo reactionInfo
+leastOreRequiredToMakeNFuel(N)
+mostFuelForNOre(N)

}



IDay14 <|.. Day14

Day14 *- IReactionInfo
IReactionInfo <|.. ReactionInfo

Day14 --> IChemicalState : "creates"

interface IChemicalState {
+ {abstract} knownChemicals()
+ {abstract} getAmountAvailableOfChemical(chemical)
+ {abstract} applyReactionsToDestroyChemical(Reaction)
+balanceChemicalState(ReactionInfo)
}

interface ChemicalState {
+ {abstract} createChemical(chemical, amount)
+ {abstract} destroyChemical(chemical, amount)
+ applyReactionsToDestroyChemical(Reaction)
}

IChemicalState <|-- ChemicalState

ChemicalState <|.. ChemicalStateImpl

class ChemicalStateImpl {
+ createChemical(chemical, amount)
+ destroyChemical(chemical, amount)
+ getAmountAvailableOfChemical(chemical)
+ knownChemicals()
}

IChemicalState --> ChemicalStateImpl: "creates"
IDay14 --> Day14: "creates"
IReactionInfo --> ReactionInfo: "creates"



@enduml